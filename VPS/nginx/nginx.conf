user root;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 1024;
}
http {
	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;
	ssl_prefer_server_ciphers on;
#	access_log /var/log/nginx/access.log;
#	error_log /var/log/nginx/error.log;
	gzip on;
	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
	  
	server { #普通反代
  		  listen 80;
  		  server_name example.com; #替换成自己的域名
  		  ssl_certificate /root/test.crt; #使用自定义证书
  		  ssl_certificate_key /root/test.key; #使用自定义证书

  		  location / {
  		      proxy_pass http://localhost:1234; #反代地址
  		      proxy_set_header Host $host;
  		      proxy_set_header X-Real-IP $remote_addr;
  		      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  		      proxy_set_header Upgrade $http_upgrade; #开启websocks
  		       Connection "Upgrade"; #开启websocks
  		  }
	}
	
	server { #目录映射
  		  listen 80;
  		  server_name example.com; #替换成自己的域名
  		  root /root/share/;

  		  location / {
  		 	 autoindex on;  #目录列表
  		 	 try_files $uri $uri/ =404;
  		  }
	}
	
	server { #gRPC反代
  		  listen 443 ssl http2; 
  		  server_name example.com; #替换成自己的域名

  		  ssl_certificate /path/to/your/certificate.crt;
  		  ssl_certificate_key /path/to/your/private.key;

  		  location /grpc/ {
  		 	 grpc_pass grpc://localhost:1234; #反代地址
  		 	 grpc_set_header Host $host;
  		 	 grpc_set_header X-Real-IP $remote_addr; 
  		 	 grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  		  }
	}
	
}


